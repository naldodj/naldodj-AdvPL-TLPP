#include "totvs.ch"
#include "fileio.ch"
#include "dbstruct.ch"

#define MAX_BUFFER_SIZE 65536

function u_compFPag() as logical

    local aParametros as array

    local cAliasTmp as character
    local cSRVIniFile:=getAdv97() as character

    local lCompFoPag:=.F. as logical

    local nMaxQuerySize:=GetPvProfileInt("general","MaxQuerySize",0,cSRVIniFile) as numeric
    local nMaxStringSize:=GetPvProfileInt("general","MaxStringSize",0,cSRVIniFile) as numeric

    private cCadastro:="Comparativo Folha de Pagamento" as character

    if (nMaxStringSize<500)
        WritePProString("general","MaxStringSize","500",cSRVIniFile)
    endif

    if (nMaxQuerySize<MAX_BUFFER_SIZE)
        WritePProString("general","MaxQuerySize",LTrim(Str(MAX_BUFFER_SIZE)),cSRVIniFile)
    endif

    begin sequence

        lCompFoPag:=compFPagParametros(@aParametros)
        if (!lCompFoPag)
            break
        endif

        cAliasTmp:=getNextAlias()
        MsAguarde({||lCompFoPag:=QueryView(@cAliasTmp,@aParametros)},"Obtendo dados no SGBD")
        if (!lCompFoPag)
            break
        endif
   
        Processa({||compFPag(@cAliasTmp,@aParametros)},"Gerando Arquivo")
   
        FWFreeArray(@aParametros)

    end sequence

return(lCompFoPag)

static function compFPag(cAliasTmp as character,aParametros as array) as logical

    local aCells:=Array(0) as array
    local aHeader as array
    local aHeaderTitle as array

    local cCompetencia:=aParametros[1] as character

    local cFile:=(ProcName()+"_"+cCompetencia+"_"+CriaTrab(nil,.F.)+".xml") as character
    local cFileTmp:=getTempPath() as character

    local cField as character
    local cColumn as character
    local cFieldType as character

    local cWorkSheet:="Comparativo Folha"  as character
    local cWBreak:=cWorkSheet as character
    local cTBreak:=cWBreak+" ("+Transform(cCompetencia,"@R 9999/99")+" x Mês Atual)" as character

    local cCRLF:=CRLF as character
    local cPicture as character
    
    local cFreezePanels as character
    local cFWMSExcelRowColor as character
    local cConditionalFormatting:="" as character
    local cColConditionalFormatting as character
    local cRangeConditionalFormatting as character

    local lTotal:=.F. as logical
    local lCompFoPag:=.F. as logical

    local nField as numeric
    local nFields as numeric

    local nRangeRow:=2 as numeric

    local nAlign as numeric
    local nFormat as numeric

    local oMsExcel as object
    local oTHashMap as object
    local oFWMSExcel as object

    local uCell as variant

    begin sequence

        ProcRegua(0)

        aHeader:=(cAliasTmp)->(dbStruct())
        
        oTHashMap:=THashMap():New()

        cColConditionalFormatting:=LTrim(Str((cAliasTmp)->(FieldPos("DIFERENCA")-1)))
        oTHashMap:Set("DIFERENCA",cColConditionalFormatting)

        cColConditionalFormatting:=LTrim(Str((cAliasTmp)->(FieldPos("DIFERENCAL")-1)))
        oTHashMap:Set("DIFERENCAL",cColConditionalFormatting)

        nFields:=Len(aHeader)

        aHeaderTitle:={;
            {"FILIAL","Filial","C","@!",.T.},;
            {"PERIODO","Periodo","C","@R 9999/99",.F.},;
            {"ROTEIRO","Roteiro","C","@!",.T.},;
            {"MATRICULA","Matricula","C","@!",.T.},;
            {"NOME","Nome","C","@!",.T.},;
            {"ADMISSA","Admissao","D","__NOTRANSFORM__",.T.},;
            {"SITFOLH","Sit.Folha","C","@!",.T.},;
            {"CCUSTO","Centro de Custo","C","@!",.T.},;
            {"FUNCAO","Cod.Funcao","C","@!",.T.},;
            {"DESFUNCAO","Des.Funcao","C","@!",.T.},;
            {"PD","Verba","C","@!",.T.},;
            {"DESCPD","Desc.Verba","C","@!",.T.},;
            {"PROVENTO","Provento/"+cCompetencia,"N","__NOTRANSFORM__",.T.},;
            {"PROVENTOMA","Provento","N","__NOTRANSFORM__",.T.},;
            {"DESCONTO","Desconto/"+cCompetencia,"N","__NOTRANSFORM__",.T.},;
            {"DESCONTOMA","Desconto","N","__NOTRANSFORM__",.T.},;
            {"LIQUIDO","Liquido/"+cCompetencia,"N","__NOTRANSFORM__",.T.},;
            {"LIQUIDOMA","Liquido","N","__NOTRANSFORM__",.T.},;
            {"DIFERENCA","Diferença","N","__NOTRANSFORM__",.T.},;
            {"DIFERENCAL","Diferença Liquido","N","__NOTRANSFORM__",.T.};
        }

        oFWMSExcel:=FWMsExcelEx():New()
        oFWMSExcel:AddworkSheet(cWorkSheet)
        oFWMSExcel:AddTable(cWBreak,cTBreak)

        for nField:=1 to nFields
            if (!aHeaderTitle[nField][5])
                loop
            endif
            cField:=aHeader[nField][DBS_NAME]
            cFieldType:=aHeaderTitle[nField][3] 
            if (empty(cFieldType))
                cFieldType:=aHeader[nField][DBS_TYPE]
            endif
            nAlign:=if(cFieldType=="C",1,if(cFieldType=="N",3,2))
            //1-General,2-Number,3-Monetario,4-DateTime
            nFormat:=if(cFieldType=="D",4,if(cFieldType=="N",2,1))
            cColumn:=aHeaderTitle[nField][2]
            cColumn:=OemToAnsi(cColumn)
            oFWMSExcel:AddColumn(@cWBreak,@cTBreak,@cColumn,@nAlign,@nFormat,@lTotal)
        next nField

        cFreezePanels:="<FreezePanes/>"+cCRLF
        cFreezePanels+="<FrozenNoSplit/>"+cCRLF
        cFreezePanels+="<SplitHorizontal>2</SplitHorizontal>"+cCRLF
        cFreezePanels+="<TopRowBottomPane>2</TopRowBottomPane>"+cCRLF
        cFreezePanels+="<SplitVertical>11</SplitVertical>"+cCRLF
        cFreezePanels+="<LeftColumnRightPane>11</LeftColumnRightPane>"+cCRLF
        cFreezePanels+="<ActivePane>0</ActivePane>"+cCRLF

        while (cAliasTmp)->(!eof())

            IncProc()

            aSize(aCells,0)

            for nField := 1 to nFields
                if (!aHeaderTitle[nField][5])
                    loop
                endif
                uCell:=(cAliasTmp)->(FieldGet(nField))
                cField:=aHeader[nField][DBS_NAME]
                cFieldType:=aHeaderTitle[nField][3]
                if (empty(cFieldType))
                    cFieldType:=aHeader[nField][DBS_TYPE]
                endif
                if (cFieldType=="D")
                    if (cFieldType!=aHeader[nField][DBS_TYPE])
                        uCell:=SToD(uCell)
                    endif
                endif
                cPicture:=aHeaderTitle[nField][4]
                if (!(empty(cPicture)))
                    if (!(cPicture=="__NOTRANSFORM__"))
                        uCell:=allTrim(Transform(uCell,cPicture))
                    endif
                else
                    if (cFieldType=="D")
                        uCell:=DToC(uCell)
                    endif
                endif
                aAdd(aCells,uCell)
            next nField

            cRangeConditionalFormatting:=LTrim(Str(++nRangeRow))

            if (oTHashMap:Get("DIFERENCA",@cColConditionalFormatting).and.((cAliasTmp)->DIFERENCA!=0))
                
                if ((cAliasTmp)->DIFERENCA==0)
                    cFWMSExcelRowColor:="#92D050"
                elseif ((cAliasTmp)->DIFERENCA<0)
                    cFWMSExcelRowColor:="#FFF2CC"
                else
                    cFWMSExcelRowColor:="#C65911"
                endif

                cConditionalFormatting+='<ConditionalFormatting xmlns="urn:schemas-microsoft-com:office:excel">'+cCRLF
                cConditionalFormatting+='<Range>R'+cRangeConditionalFormatting+'C'+cColConditionalFormatting+'</Range>'+cCRLF
                cConditionalFormatting+='<Condition>'+cCRLF
                cConditionalFormatting+='<Value1>R'+cRangeConditionalFormatting+'C'+cColConditionalFormatting+'=R'+cRangeConditionalFormatting+'C'+cColConditionalFormatting+'</Value1>'+cCRLF
                cConditionalFormatting+="<Format Style='background:"+cFWMSExcelRowColor+"'/>"+cCRLF
                cConditionalFormatting+='</Condition>'+cCRLF
                cConditionalFormatting+='</ConditionalFormatting>'+cCRLF

            endif

            if (oTHashMap:Get("DIFERENCAL",@cColConditionalFormatting).and.((cAliasTmp)->DIFERENCAL!=0))
                cFWMSExcelRowColor:="#C65911"
                cConditionalFormatting+='<ConditionalFormatting xmlns="urn:schemas-microsoft-com:office:excel">'+cCRLF
                cConditionalFormatting+='<Range>R'+cRangeConditionalFormatting+'C'+cColConditionalFormatting+'</Range>'+cCRLF
                cConditionalFormatting+='<Condition>'+cCRLF
                cConditionalFormatting+='<Value1>R'+cRangeConditionalFormatting+'C'+cColConditionalFormatting+'=R'+cRangeConditionalFormatting+'C'+cColConditionalFormatting+'</Value1>'+cCRLF
                cConditionalFormatting+="<Format Style='background:"+cFWMSExcelRowColor+"'/>"+cCRLF
                cConditionalFormatting+='</Condition>'+cCRLF
                cConditionalFormatting+='</ConditionalFormatting>'+cCRLF
            endif

            oFWMSExcel:AddRow(@cWBreak,@cTBreak,aClone(aCells))

            (cAliasTmp)->(dbSkip())

        end while

        MsAguarde({||oFWMSExcel:Activate(),oFWMSExcel:GetXMLFile(cFile),oFWMSExcel:DeActivate()},"Obtendo Saida")

        MsAguarde({||lCompFoPag:=UpdateXMLFile(@cFile,@cFreezePanels,@cConditionalFormatting)},"Formatando Saida")
        if (!lCompFoPag)
            break
        endif

        MsAguarde({||lCompFoPag:=CpyS2T(cFile,cFileTmp,.T.)},"Copiando arquivo do Servidor")
        if (!lCompFoPag)
            break
        endif

        fErase(cFile)

        oMsExcel:=MsExcel():New()
        cFileTmp+=cFile
        MsAguarde({||oMsExcel:WorkBooks:Open(cFileTmp)},"Carregando Arquivo Local")
        oMsExcel:SetVisible(.T.)
        oMsExcel:Destroy()
        oMsExcel:=FreeObj(oMsExcel)

    end sequence
    
    if (file(cFile))
        fErase(cFile)
    endif

    FWFreeArray(@aCells)
    FWFreeArray(@aHeader)
    FWFreeArray(@aHeaderTitle)

    if (valType(oFWMSExcel)=="O")
        oFWMSExcel:=FreeObj(oFWMSExcel)
    endif

    if (valtype(oMsExcel)=="O")
        oMsExcel:=FreeObj(oMsExcel)
    endif

    if (valType(oTHashMap)=="O")
        oTHashMap:Clean()
        oTHashMap:=FreeObj(oTHashMap)
    endif

    DelClassIntF()

return(lCompFoPag)

static function compFPagParametros(aParametros as array) as logical

    local aPBoxPrm:=Array(0) as array
    local aPBoxRet:=Array(0) as array

    local cPBoxTit:=OemToAnsi("Informe os Parâmetros") as character

    local lParamBox:=.F. as logical

    local nPBox as numeric

    saveInter()

        aAdd(aPBoxPrm,Array(9))
        nPBox:=Len(aPBoxPrm)
        //01----------------------------------------------------------------------------------------------
        aPBoxPrm[nPBox][1]:=1//[1]:1 - MsGet
        aPBoxPrm[nPBox][2]:="Competencia"//[2]:Descricao
        aPBoxPrm[nPBox][3]:=Space(GetSx3Cache("RD_DATARQ","X3_TAMANHO"))//[3]:String contendo o inicializador do campo
        aPBoxPrm[nPBox][4]:="@R 9999/99"//[4]:String contendo a Picture do campo
        aPBoxPrm[nPBox][5]:="NaoVazio()"//[5]:String contendo a validacao
        aPBoxPrm[nPBox][6]:=""//[6]:Consulta F3
        aPBoxPrm[nPBox][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
        aPBoxPrm[nPBox][8]:=CalcFieldSize("C",GetSx3Cache("RD_DATARQ","X3_TAMANHO"),0,aPBoxPrm[nPBox][4],aPBoxPrm[nPBox][2])//[8]:Tamanho do MsGet
        aPBoxPrm[nPBox][9]:=.T.//[9]:Flag .T./.F. Parametro Obrigatorio ?

        aAdd(aPBoxPrm,Array(9))
        nPBox:=Len(aPBoxPrm)
        //01----------------------------------------------------------------------------------------------
        aPBoxPrm[nPBox][1]:=1//[1]:1 - MsGet
        aPBoxPrm[nPBox][2]:="Filial De"//[2]:Descricao
        aPBoxPrm[nPBox][3]:=Space(GetSx3Cache("RD_FILIAL","X3_TAMANHO"))//[3]:String contendo o inicializador do campo
        aPBoxPrm[nPBox][4]:=if(empty(GetSx3Cache("RD_FILIAL","X3_PICTURE")),"@!",GetSx3Cache("RD_FILIAL","X3_PICTURE"))//[4]:String contendo a Picture do campo
        aPBoxPrm[nPBox][5]:="AllWaysTrue()"//[5]:String contendo a validacao
        aPBoxPrm[nPBox][6]:=if(empty(GetSx3Cache("RD_FILIAL","X3_F3")),"XM0",GetSx3Cache("RD_FILIAL","X3_F3"))//[6]:Consulta F3
        aPBoxPrm[nPBox][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
        aPBoxPrm[nPBox][8]:=CalcFieldSize("C",GetSx3Cache("RD_FILIAL","X3_TAMANHO"),0,aPBoxPrm[nPBox][4],aPBoxPrm[nPBox][2])//[8]:Tamanho do MsGet
        aPBoxPrm[nPBox][9]:=.F.//[9]:Flag .T./.F. Parametro Obrigatorio ?

        aAdd(aPBoxPrm,Array(9))
        nPBox:=Len(aPBoxPrm)
        //01----------------------------------------------------------------------------------------------
        aPBoxPrm[nPBox][1]:=1//[1]:1 - MsGet
        aPBoxPrm[nPBox][2]:="Filial Ate"//[2]:Descricao
        aPBoxPrm[nPBox][3]:=Space(GetSx3Cache("RD_FILIAL","X3_TAMANHO"))//[3]:String contendo o inicializador do campo
        aPBoxPrm[nPBox][4]:=if(empty(GetSx3Cache("RD_FILIAL","X3_PICTURE")),"@!",GetSx3Cache("RD_FILIAL","X3_PICTURE"))//[4]:String contendo a Picture do campo
        aPBoxPrm[nPBox][5]:="NaoVazio()"//[5]:String contendo a validacao
        aPBoxPrm[nPBox][6]:=if(empty(GetSx3Cache("RD_FILIAL","X3_F3")),"XM0",GetSx3Cache("RD_FILIAL","X3_F3"))//[6]:Consulta F3
        aPBoxPrm[nPBox][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
        aPBoxPrm[nPBox][8]:=CalcFieldSize("C",GetSx3Cache("RD_FILIAL","X3_TAMANHO"),0,aPBoxPrm[nPBox][4],aPBoxPrm[nPBox][2])//[8]:Tamanho do MsGet
        aPBoxPrm[nPBox][9]:=.T.//[9]:Flag .T./.F. Parametro Obrigatorio ?

        aAdd(aPBoxPrm,Array(9))
        nPBox:=Len(aPBoxPrm)
        //01----------------------------------------------------------------------------------------------
        aPBoxPrm[nPBox][1]:=1//[1]:1 - MsGet
        aPBoxPrm[nPBox][2]:="C. Custo De"//[2]:Descricao
        aPBoxPrm[nPBox][3]:=Space(GetSx3Cache("RA_CC","X3_TAMANHO"))//[3]:String contendo o inicializador do campo
        aPBoxPrm[nPBox][4]:=GetSx3Cache("RA_CC","X3_PICTURE")//[4]:String contendo a Picture do campo
        aPBoxPrm[nPBox][5]:="AllWaysTrue()"//[5]:String contendo a validacao
        aPBoxPrm[nPBox][6]:=if(empty(GetSx3Cache("RA_CC","X3_F3")),"CTT",GetSx3Cache("RA_CC","X3_F3"))//[6]:Consulta F3
        aPBoxPrm[nPBox][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
        aPBoxPrm[nPBox][8]:=CalcFieldSize("C",GetSx3Cache("RA_CC","X3_TAMANHO"),0,aPBoxPrm[nPBox][4],aPBoxPrm[nPBox][2])//[8]:Tamanho do MsGet
        aPBoxPrm[nPBox][9]:=.F.//[9]:Flag .T./.F. Parametro Obrigatorio ?

        aAdd(aPBoxPrm,Array(9))
        nPBox:=Len(aPBoxPrm)
        //01----------------------------------------------------------------------------------------------
        aPBoxPrm[nPBox][1]:=1//[1]:1 - MsGet
        aPBoxPrm[nPBox][2]:="C. Custo Ate"//[2]:Descricao
        aPBoxPrm[nPBox][3]:=Space(GetSx3Cache("RA_CC","X3_TAMANHO"))//[3]:String contendo o inicializador do campo
        aPBoxPrm[nPBox][4]:=GetSx3Cache("RA_CC","X3_PICTURE")//[4]:String contendo a Picture do campo
        aPBoxPrm[nPBox][5]:="NaoVazio()"//[5]:String contendo a validacao
        aPBoxPrm[nPBox][6]:=if(empty(GetSx3Cache("RA_CC","X3_F3")),"CTT",GetSx3Cache("RA_CC","X3_F3"))//[6]:Consulta F3
        aPBoxPrm[nPBox][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
        aPBoxPrm[nPBox][8]:=CalcFieldSize("C",GetSx3Cache("RA_CC","X3_TAMANHO"),0,aPBoxPrm[nPBox][4],aPBoxPrm[nPBox][2])//[8]:Tamanho do MsGet
        aPBoxPrm[nPBox][9]:=.T.//[9]:Flag .T./.F. Parametro Obrigatorio ?

        aAdd(aPBoxPrm,Array(9))
        nPBox:=Len(aPBoxPrm)
        //01----------------------------------------------------------------------------------------------
        aPBoxPrm[nPBox][1]:=1//[1]:1 - MsGet
        aPBoxPrm[nPBox][2]:="Matricula De"//[2]:Descricao
        aPBoxPrm[nPBox][3]:=Space(GetSx3Cache("RA_MAT","X3_TAMANHO"))//[3]:String contendo o inicializador do campo
        aPBoxPrm[nPBox][4]:=GetSx3Cache("RA_MAT","X3_PICTURE")//[4]:String contendo a Picture do campo
        aPBoxPrm[nPBox][5]:="AllWaysTrue()"//[5]:String contendo a validacao
        aPBoxPrm[nPBox][6]:=if(empty(GetSx3Cache("RA_MAT","X3_F3")),"SRA",GetSx3Cache("RA_MAT","X3_F3"))//[6]:Consulta F3
        aPBoxPrm[nPBox][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
        aPBoxPrm[nPBox][8]:=CalcFieldSize("C",GetSx3Cache("RA_MAT","X3_TAMANHO"),0,aPBoxPrm[nPBox][4],aPBoxPrm[nPBox][2])//[8]:Tamanho do MsGet
        aPBoxPrm[nPBox][9]:=.F.//[9]:Flag .T./.F. Parametro Obrigatorio ?

        aAdd(aPBoxPrm,Array(9))
        nPBox:=Len(aPBoxPrm)
        //01----------------------------------------------------------------------------------------------
        aPBoxPrm[nPBox][1]:=1//[1]:1 - MsGet
        aPBoxPrm[nPBox][2]:="Matricula Ate"//[2]:Descricao
        aPBoxPrm[nPBox][3]:=Space(GetSx3Cache("RA_MAT","X3_TAMANHO"))//[3]:String contendo o inicializador do campo
        aPBoxPrm[nPBox][4]:=GetSx3Cache("RA_MAT","X3_PICTURE")//[4]:String contendo a Picture do campo
        aPBoxPrm[nPBox][5]:="NaoVazio()"//[5]:String contendo a validacao
        aPBoxPrm[nPBox][6]:=if(empty(GetSx3Cache("RA_MAT","X3_F3")),"SRA",GetSx3Cache("RA_MAT","X3_F3"))//[6]:Consulta F3
        aPBoxPrm[nPBox][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
        aPBoxPrm[nPBox][8]:=CalcFieldSize("C",GetSx3Cache("RA_MAT","X3_TAMANHO"),0,aPBoxPrm[nPBox][4],aPBoxPrm[nPBox][2])//[8]:Tamanho do MsGet
        aPBoxPrm[nPBox][9]:=.T.//[9]:Flag .T./.F. Parametro Obrigatorio ?

        aAdd(aPBoxPrm,Array(9))
        nPBox:=Len(aPBoxPrm)
        //01----------------------------------------------------------------------------------------------
        aPBoxPrm[nPBox][1]:=1//[1]:1 - MsGet
        aPBoxPrm[nPBox][2]:="Situacao"//[2]:Descricao
        aPBoxPrm[nPBox][3]:=Space(len(fSituacao(.F.,.F.))*GetSx3Cache("RA_SITFOLH","X3_TAMANHO"))//[3]:String contendo o inicializador do campo
        aPBoxPrm[nPBox][4]:=GetSx3Cache("RA_SITFOLH","X3_PICTURE")//[4]:String contendo a Picture do campo
        aPBoxPrm[nPBox][5]:="NaoVazio()"//[5]:String contendo a validacao
        aPBoxPrm[nPBox][6]:="_SITFL"//[6]:Consulta F3
        aPBoxPrm[nPBox][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
        aPBoxPrm[nPBox][8]:=(len(fSituacao(.F.,.F.))*CalcFieldSize("C",GetSx3Cache("RA_SITFOLH","X3_TAMANHO"),0,aPBoxPrm[nPBox][4],aPBoxPrm[nPBox][2])/5)//[8]:Tamanho do MsGet
        aPBoxPrm[nPBox][9]:=.T.//[9]:Flag .T./.F. Parametro Obrigatorio ?

        aAdd(aPBoxPrm,Array(9))
        nPBox:=Len(aPBoxPrm)
        //01----------------------------------------------------------------------------------------------
        aPBoxPrm[nPBox][1]:=1//[1]:1 - MsGet
        aPBoxPrm[nPBox][2]:="Categoria"//[2]:Descricao
        aPBoxPrm[nPBox][3]:=Space(len(fCategoria(.F.,.F.))*GetSx3Cache("RA_CATFUNC","X3_TAMANHO"))//[3]:String contendo o inicializador do campo
        aPBoxPrm[nPBox][4]:=GetSx3Cache("RA_CATFUNC","X3_PICTURE")//[4]:String contendo a Picture do campo
        aPBoxPrm[nPBox][5]:="NaoVazio()"//[5]:String contendo a validacao
        aPBoxPrm[nPBox][6]:="_CATFN"//[6]:Consulta F3
        aPBoxPrm[nPBox][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
        aPBoxPrm[nPBox][8]:=(len(fCategoria(.F.,.F.))*CalcFieldSize("C",GetSx3Cache("RA_CATFUNC","X3_TAMANHO"),0,aPBoxPrm[nPBox][4],aPBoxPrm[nPBox][2])/5)//[8]:Tamanho do MsGet
        aPBoxPrm[nPBox][9]:=.T.//[9]:Flag .T./.F. Parametro Obrigatorio ?

        aAdd(aPBoxPrm,Array(9))
        nPBox:=Len(aPBoxPrm)
        //01----------------------------------------------------------------------------------------------
        aPBoxPrm[nPBox][1]:=1//[1]:1 - MsGet
        aPBoxPrm[nPBox][2]:="Roteiro De"//[2]:Descricao
        aPBoxPrm[nPBox][3]:=Space(GetSx3Cache("RD_ROTEIR","X3_TAMANHO"))//[3]:String contendo o inicializador do campo
        aPBoxPrm[nPBox][4]:=GetSx3Cache("RD_ROTEIR","X3_PICTURE")//[4]:String contendo a Picture do campo
        aPBoxPrm[nPBox][5]:="AllWaysTrue()"//[5]:String contendo a validacao
        aPBoxPrm[nPBox][6]:=if(empty(GetSx3Cache("RD_ROTEIR","X3_F3")),"SRY",GetSx3Cache("RD_ROTEIR","X3_F3"))//[6]:Consulta F3
        aPBoxPrm[nPBox][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
        aPBoxPrm[nPBox][8]:=CalcFieldSize("C",GetSx3Cache("RD_ROTEIR","X3_TAMANHO"),0,aPBoxPrm[nPBox][4],aPBoxPrm[nPBox][2])//[8]:Tamanho do MsGet
        aPBoxPrm[nPBox][9]:=.F.//[9]:Flag .T./.F. Parametro Obrigatorio ?

        aAdd(aPBoxPrm,Array(9))
        nPBox:=Len(aPBoxPrm)
        //01----------------------------------------------------------------------------------------------
        aPBoxPrm[nPBox][1]:=1//[1]:1 - MsGet
        aPBoxPrm[nPBox][2]:="Roteiro Ate"//[2]:Descricao
        aPBoxPrm[nPBox][3]:=Space(GetSx3Cache("RD_ROTEIR","X3_TAMANHO"))//[3]:String contendo o inicializador do campo
        aPBoxPrm[nPBox][4]:=GetSx3Cache("RD_ROTEIR","X3_PICTURE")//[4]:String contendo a Picture do campo
        aPBoxPrm[nPBox][5]:="NaoVazio()"//[5]:String contendo a validacao
        aPBoxPrm[nPBox][6]:=if(empty(GetSx3Cache("RD_ROTEIR","X3_F3")),"SRY",GetSx3Cache("RD_ROTEIR","X3_F3"))//[6]:Consulta F3
        aPBoxPrm[nPBox][7]:="AllWaysTrue()"//[7]:String contendo a validacao When
        aPBoxPrm[nPBox][8]:=CalcFieldSize("C",GetSx3Cache("RD_ROTEIR","X3_TAMANHO"),0,aPBoxPrm[nPBox][4],aPBoxPrm[nPBox][2])//[8]:Tamanho do MsGet
        aPBoxPrm[nPBox][9]:=.T.//[9]:Flag .T./.F. Parametro Obrigatorio ?

        while (!(lParamBox:=ParamBox(@aPBoxPrm,@cPBoxTit,@aPBoxRet,NIL,NIL,.T.,NIL,NIL,NIL,NIL,.T.,.T.)))
            lParamBox:=MsgYesNo("Deseja Abortar a Geracao?","Atencao!")
            if (lParamBox)
                lParamBox:=.F.
                exit
            endif
        end while

        if (lParamBox)
            aParametros:=aClone(aPBoxRet)
        endif

    restInter()
    
    FWFreeArray(@aPBoxRet)
    FWFreeArray(@aPBoxPrm)

return(lParamBox)

static function QueryView(cAliasTmp as character,aParametros as array) as logical

    local cCompetencia:=aParametros[1] as character

    local cFilDe:=aParametros[2] as character
    local cFilAte:=aParametros[3] as character

    local cCCDe:=aParametros[4] as character
    local cCCAte:=aParametros[5] as character

    local cMatDe:=aParametros[6] as character
    local cMatAte:=aParametros[7] as character

    local cSitFol:="%"+fSQLIN(aParametros[8],1)+"%" as character
    local cCatFun:="%"+fSQLIN(aParametros[9],1)+"%" as character

    local cRotDe:=aParametros[10] as character
    local cRotAte:=aParametros[11] as character

    local lQueryView:=.T. as logical

    beginSQL Alias cAliasTmp

        %noParser%
        COLUMN ADMISSA AS DATE

        WITH y AS (
            SELECT w.FILIAL
                  ,w.ROTEIRO
                  ,w.MATRICULA
                  ,w.NOME
                  ,w.ADMISSA
                  ,w.SITFOLH
                  ,w.CCUSTO
                  ,w.FUNCAO
                  ,w.DESFUNCAO
                  ,w.TIPOCOD
                  ,w.PD
                  ,w.DESCPD
                  ,w.CODFOL
                  ,SUM(ISNULL(w.PROVENTO,0)) PROVENTO
                  ,SUM(ISNULL(w.DESCONTO,0)) DESCONTO
                  ,SUM(ISNULL(w.LIQUIDO,0)) LIQUIDO
             FROM
             (
                SELECT SRA.RA_FILIAL FILIAL
                      ,SRC.RC_ROTEIR ROTEIRO
                      ,SRA.RA_MAT MATRICULA
                      ,SRA.RA_NOME NOME
                      ,SRA.RA_ADMISSA ADMISSA
                      ,SX5.X5_DESCRI SITFOLH
                      ,CTT.CTT_DESC01 CCUSTO
                      ,SRA.RA_CODFUNC FUNCAO
                      ,SRJ.RJ_DESC DESFUNCAO
                      ,SRV.RV_TIPOCOD TIPOCOD
                      ,SRC.RC_PD PD
                      ,SRV.RV_DESC DESCPD
                      ,SRV.RV_CODFOL CODFOL
                      ,(CASE SRV.RV_TIPOCOD WHEN '1' THEN SUM(SRC.RC_VALOR) ELSE 0 END ) PROVENTO
                      ,(CASE SRV.RV_TIPOCOD WHEN '2' THEN SUM(SRC.RC_VALOR) ELSE 0 END ) DESCONTO
                      ,(CASE WHEN SRV.RV_CODFOL='0047' THEN SUM(SRC.RC_VALOR) ELSE 0 END ) LIQUIDO
                  FROM %table:SRA% SRA
             LEFT JOIN %table:CTT% CTT ON CTT.CTT_CUSTO=SRA.RA_CC
             LEFT JOIN %table:SRC% SRC ON SRC.RC_FILIAL=SRA.RA_FILIAL AND SRC.RC_MAT=SRA.RA_MAT
             LEFT JOIN %table:SRV% SRV ON SRV.RV_COD=SRC.RC_PD
             LEFT JOIN %table:SRJ% SRJ ON SRJ.RJ_FUNCAO=SRA.RA_CODFUNC
             LEFT JOIN %table:SX5% SX5 ON SX5.X5_TABELA='31' AND SX5.X5_CHAVE=SRA.RA_SITFOLH
                 WHERE (1=1)
                   AND SRA.%notDel%
                   AND CTT.%notDel%
                   AND SRC.%notDel%
                   AND SRV.%notDel%
                   AND SRJ.%notDel%
                   AND SX5.%notDel%
                   AND SRA.RA_FILIAL BETWEEN %exp:cFilDe% AND %exp:cFilAte%
                   AND SRA.RA_CC BETWEEN %exp:cCCDe% AND %exp:cCCAte%
                   AND SRA.RA_MAT BETWEEN %exp:cMatDe% AND %exp:cMatAte%
                   AND SRA.RA_SITFOLH IN (%exp:cSitFol%)
                   AND SRA.RA_CATFUNC IN (%exp:cCatFun%)
                   AND SRC.RC_ROTEIR BETWEEN %exp:cRotDe% AND %exp:cRotAte%
                   AND SRC.RC_FILIAL=SRA.RA_FILIAL
                   AND CTT.CTT_FILIAL=(CASE CTT.CTT_FILIAL WHEN '' THEN '' ELSE LEFT(SRA.RA_FILIAL,LEN(CTT.CTT_FILIAL)) END)
                   AND SRV.RV_FILIAL=(CASE SRV.RV_FILIAL WHEN '' THEN '' ELSE LEFT(SRA.RA_FILIAL,LEN(SRV.RV_FILIAL)) END)
                   AND SRJ.RJ_FILIAL=(CASE SRJ.RJ_FILIAL WHEN '' THEN '' ELSE LEFT(SRA.RA_FILIAL,LEN(SRJ.RJ_FILIAL)) END)
                   AND SX5.X5_FILIAL=(CASE SX5.X5_FILIAL WHEN '' THEN '' ELSE LEFT(SRA.RA_FILIAL,LEN(SX5.X5_FILIAL)) END)
                   AND SRJ.RJ_FUNCAO=SRA.RA_CODFUNC
                   AND SX5.X5_CHAVE=SRA.RA_SITFOLH
                   AND (SRV.RV_TIPOCOD IN ('1','2') OR SRV.RV_CODFOL='0047')
                GROUP BY SRA.RA_FILIAL
                    ,SRC.RC_ROTEIR
                    ,SRA.RA_MAT
                    ,SRA.RA_NOME
                    ,SRA.RA_ADMISSA
                    ,SX5.X5_DESCRI
                    ,SRV.RV_TIPOCOD
                    ,CTT.CTT_DESC01
                    ,SRA.RA_CODFUNC
                    ,SRJ.RJ_DESC
                    ,SRC.RC_PD
                    ,SRV.RV_DESC
                    ,SRV.RV_CODFOL
        ) w
        GROUP BY w.FILIAL
                ,w.ROTEIRO
                ,w.MATRICULA
                ,w.NOME
                ,w.ADMISSA
                ,w.SITFOLH
                ,w.CCUSTO
                ,w.FUNCAO
                ,w.DESFUNCAO
                ,w.TIPOCOD
                ,w.PD
                ,w.DESCPD
                ,w.CODFOL
        )
        SELECT ISNULL(x.FILIAL,y.FILIAL) FILIAL
              ,ISNULL(x.PERIODO,%exp:cCompetencia%) PERIODO
              ,ISNULL(x.ROTEIRO,y.ROTEIRO) ROTEIRO
              ,ISNULL(x.MATRICULA,y.MATRICULA) MATRICULA
              ,ISNULL(x.NOME,y.NOME) NOME
              ,ISNULL(x.ADMISSA,y.ADMISSA) ADMISSA
              ,ISNULL(x.SITFOLH,y.SITFOLH) SITFOLH
              ,ISNULL(x.CCUSTO,y.CCUSTO) CCUSTO
              ,ISNULL(x.FUNCAO,y.FUNCAO) FUNCAO
              ,ISNULL(x.DESFUNCAO,y.DESFUNCAO) DESFUNCAO
              ,ISNULL(x.PD,y.PD) PD
              ,ISNULL(x.DESCPD,y.DESCPD) DESCPD
              ,ISNULL((CASE WHEN x.CODFOL='0047' THEN (
                                                    (
                                                            SELECT SUM(SRD.RD_VALOR)
                                                              FROM %table:SRD% SRD
                                                         LEFT JOIN %table:SRV% SRV ON SRV.RV_COD=SRD.RD_PD
                                                              WHERE (1=1)
                                                                AND SRD.D_E_L_E_T_=' '
                                                                AND SRD.RD_FILIAL=x.FILIAL
                                                                AND SRD.RD_MAT=x.MATRICULA
                                                                AND SRD.RD_DATARQ=x.PERIODO
                                                                AND SRD.RD_ROTEIR=x.ROTEIRO
                                                                AND SRV.RV_FILIAL=(CASE SRV.RV_FILIAL WHEN '' THEN '' ELSE LEFT(SRD.RD_FILIAL,LEN(SRV.RV_FILIAL)) END)
                                                                AND SRV.RV_TIPOCOD='1'
                                                           GROUP BY SRD.RD_FILIAL
                                                                   ,SRD.RD_MAT
                                                                   ,SRD.RD_DATARQ
                                                                   ,SRD.RD_ROTEIR
                                                    )
            ) ELSE SUM(ISNULL(x.PROVENTO,0)) END ),0) PROVENTO
            ,ISNULL((CASE WHEN y.CODFOL='0047' THEN (
                                                    (
                                                        SELECT SUM(SRC.RC_VALOR)
                                                          FROM %table:SRC% SRC
                                                     LEFT JOIN %table:SRV% SRV ON SRV.RV_COD=SRC.RC_PD
                                                         WHERE (1=1)
                                                           AND SRC.D_E_L_E_T_=' '
                                                           AND SRC.RC_FILIAL=y.FILIAL
                                                           AND SRC.RC_ROTEIR=y.ROTEIRO
                                                           AND SRC.RC_MAT=y.MATRICULA
                                                           AND SRV.RV_FILIAL=(CASE SRV.RV_FILIAL WHEN '' THEN '' ELSE LEFT(SRC.RC_FILIAL,LEN(SRV.RV_FILIAL)) END)
                                                           AND SRV.RV_TIPOCOD='1'
                                                      GROUP BY SRC.RC_FILIAL
                                                              ,SRC.RC_ROTEIR
                                                              ,SRC.RC_MAT
                                                              ,SRV.RV_TIPOCOD
                                                    )       
            ) ELSE SUM(ISNULL(y.PROVENTO,0)) END ),0) PROVENTOMA
            ,ISNULL((CASE WHEN x.CODFOL='0047' THEN (
                                                    (
                                                        SELECT SUM(SRD.RD_VALOR)
                                                          FROM %table:SRD% SRD
                                                     LEFT JOIN %table:SRV% SRV ON SRV.RV_COD=SRD.RD_PD
                                                         WHERE (1=1)
                                                           AND SRD.D_E_L_E_T_=' '
                                                           AND SRD.RD_FILIAL=x.FILIAL
                                                           AND SRD.RD_MAT=x.MATRICULA
                                                           AND SRD.RD_DATARQ=x.PERIODO
                                                           AND SRD.RD_ROTEIR=x.ROTEIRO
                                                           AND SRV.RV_FILIAL=(CASE SRV.RV_FILIAL WHEN '' THEN '' ELSE LEFT(SRD.RD_FILIAL,LEN(SRV.RV_FILIAL)) END)
                                                           AND SRV.RV_TIPOCOD='2'
                                                      GROUP BY SRD.RD_FILIAL
                                                              ,SRD.RD_MAT
                                                              ,SRD.RD_DATARQ
                                                              ,SRV.RV_TIPOCOD
                                                    )
            ) ELSE SUM(ISNULL(x.DESCONTO,0)) END ),0) DESCONTO
            ,ISNULL((CASE WHEN y.CODFOL='0047' THEN (
                                                    (
                                                        SELECT SUM(SRC.RC_VALOR)
                                                          FROM %table:SRC% SRC
                                                     LEFT JOIN %table:SRV% SRV ON SRV.RV_COD=SRC.RC_PD
                                                         WHERE (1=1)
                                                           AND SRC.D_E_L_E_T_=' '
                                                           AND SRC.RC_FILIAL=y.FILIAL
                                                           AND SRC.RC_ROTEIR=y.ROTEIRO
                                                           AND SRC.RC_MAT=y.MATRICULA
                                                           AND SRV.RV_FILIAL=(CASE SRV.RV_FILIAL WHEN '' THEN '' ELSE LEFT(SRC.RC_FILIAL,LEN(SRV.RV_FILIAL)) END)
                                                           AND SRV.RV_TIPOCOD='2'
                                                      GROUP BY SRC.RC_FILIAL
                                                              ,SRC.RC_ROTEIR
                                                              ,SRC.RC_MAT
                                                              ,SRV.RV_TIPOCOD
                                                    )
            ) ELSE SUM(ISNULL(y.DESCONTO,0)) END ),0) DESCONTOMA
            ,SUM(ISNULL(x.LIQUIDO,0)) LIQUIDO
            ,SUM(ISNULL(y.LIQUIDO,0)) LIQUIDOMA
            ,(CASE WHEN ISNULL(x.TIPOCOD,y.TIPOCOD)='1' THEN (SUM(ISNULL(x.PROVENTO,0))-SUM(ISNULL(y.PROVENTO,0))) ELSE (CASE WHEN ISNULL(x.TIPOCOD,y.TIPOCOD)='2' THEN (SUM(ISNULL(x.DESCONTO,0))-SUM(ISNULL(y.DESCONTO,0))) ELSE (SUM(ISNULL(x.LIQUIDO,0))-SUM(ISNULL(y.LIQUIDO,0))) END) END) DIFERENCA
           ,(ISNULL((CASE WHEN y.CODFOL='0047' THEN (
                                                    (
                                                        SELECT SUM((CASE WHEN SRV.RV_TIPOCOD='1' THEN SRC.RC_VALOR ELSE -SRC.RC_VALOR END))
                                                          FROM %table:SRC% SRC
                                                     LEFT JOIN %table:SRV% SRV ON SRV.RV_COD=SRC.RC_PD
                                                         WHERE (1=1)
                                                           AND SRC.D_E_L_E_T_=' '
                                                           AND SRC.RC_FILIAL=y.FILIAL
                                                           AND SRC.RC_ROTEIR=y.ROTEIRO
                                                           AND SRC.RC_MAT=y.MATRICULA
                                                           AND SRV.RV_FILIAL=(CASE SRV.RV_FILIAL WHEN '' THEN '' ELSE LEFT(SRC.RC_FILIAL,LEN(SRV.RV_FILIAL)) END)
                                                           AND SRV.RV_TIPOCOD IN ('1','2')
                                                      GROUP BY SRC.RC_FILIAL
                                                              ,SRC.RC_ROTEIR
                                                              ,SRC.RC_MAT
                                                    )  
            ) ELSE 0 END ),0)-SUM(ISNULL(y.LIQUIDO,0))) DIFERENCAL
        FROM
        (
            SELECT SRA.RA_FILIAL FILIAL
                ,SRD.RD_DATARQ PERIODO
                ,SRD.RD_ROTEIR ROTEIRO
                ,SRA.RA_MAT MATRICULA
                ,SRA.RA_NOME NOME
                ,SRA.RA_ADMISSA ADMISSA
                ,SX5.X5_DESCRI SITFOLH
                ,CTT.CTT_DESC01 CCUSTO
                ,SRA.RA_CODFUNC FUNCAO
                ,SRJ.RJ_DESC DESFUNCAO
                ,SRV.RV_TIPOCOD TIPOCOD
                ,SRD.RD_PD PD
                ,SRV.RV_DESC DESCPD
                ,SRV.RV_CODFOL CODFOL
                ,(CASE SRV.RV_TIPOCOD WHEN '1' THEN SUM(SRD.RD_VALOR) ELSE 0 END ) PROVENTO
                ,(CASE SRV.RV_TIPOCOD WHEN '2' THEN SUM(SRD.RD_VALOR) ELSE 0 END ) DESCONTO
                ,(CASE WHEN SRV.RV_CODFOL='0047' THEN SUM(SRD.RD_VALOR) ELSE 0 END ) LIQUIDO
            FROM %table:SRA% SRA
       LEFT JOIN %table:CTT% CTT ON CTT.CTT_CUSTO=SRA.RA_CC
       LEFT JOIN %table:SRD% SRD ON SRD.RD_FILIAL=SRA.RA_FILIAL AND SRD.RD_MAT=SRA.RA_MAT
       LEFT JOIN %table:SRV% SRV ON SRV.RV_COD=SRD.RD_PD
       LEFT JOIN %table:SRJ% SRJ ON SRJ.RJ_FUNCAO=SRA.RA_CODFUNC
       LEFT JOIN %table:SX5% SX5 ON SX5.X5_TABELA='31' AND SX5.X5_CHAVE=SRA.RA_SITFOLH
           WHERE (1=1)
             AND SRA.%notDel%
             AND CTT.%notDel%
             AND SRD.%notDel%
             AND SRV.%notDel%
             AND SRJ.%notDel%
             AND SX5.%notDel%
             AND SRA.RA_FILIAL BETWEEN %exp:cFilDe% AND %exp:cFilAte%
             AND SRA.RA_CC BETWEEN %exp:cCCDe% AND %exp:cCCAte%
             AND SRA.RA_MAT BETWEEN %exp:cMatDe% AND %exp:cMatAte%
             AND SRA.RA_SITFOLH IN (%exp:cSitFol%)
             AND SRA.RA_CATFUNC IN (%exp:cCatFun%)
             AND SRD.RD_ROTEIR BETWEEN %exp:cRotDe% AND %exp:cRotAte%
             AND SRD.RD_FILIAL=SRA.RA_FILIAL
             AND CTT.CTT_FILIAL=(CASE CTT.CTT_FILIAL WHEN '' THEN '' ELSE LEFT(SRA.RA_FILIAL,LEN(CTT.CTT_FILIAL)) END)
             AND SRV.RV_FILIAL=(CASE SRV.RV_FILIAL WHEN '' THEN '' ELSE LEFT(SRA.RA_FILIAL,LEN(SRV.RV_FILIAL)) END)
             AND SRJ.RJ_FILIAL=(CASE SRJ.RJ_FILIAL WHEN '' THEN '' ELSE LEFT(SRA.RA_FILIAL,LEN(SRJ.RJ_FILIAL)) END)
             AND SX5.X5_FILIAL=(CASE SX5.X5_FILIAL WHEN '' THEN '' ELSE LEFT(SRA.RA_FILIAL,LEN(SX5.X5_FILIAL)) END)
             AND SRJ.RJ_FUNCAO=SRA.RA_CODFUNC
             AND SX5.X5_CHAVE=SRA.RA_SITFOLH
             AND (SRV.RV_TIPOCOD IN ('1','2') OR SRV.RV_CODFOL='0047')
             AND SRD.RD_DATARQ=%exp:cCompetencia%
        GROUP BY SRA.RA_FILIAL
                ,SRD.RD_DATARQ
                ,SRD.RD_ROTEIR
                ,SRA.RA_MAT
                ,SRA.RA_NOME
                ,SRA.RA_ADMISSA
                ,SX5.X5_DESCRI
                ,CTT.CTT_DESC01
                ,SRA.RA_CODFUNC
                ,SRJ.RJ_DESC
                ,SRV.RV_TIPOCOD
                ,SRD.RD_PD
                ,SRV.RV_DESC
                ,SRV.RV_TIPOCOD
                ,SRV.RV_CODFOL
        ) x
        FULL OUTER JOIN y ON y.FILIAL=x.FILIAL AND x.ROTEIRO=y.ROTEIRO AND y.MATRICULA=x.MATRICULA AND x.PD=y.PD
        GROUP BY x.FILIAL
                ,y.FILIAL
                ,x.PERIODO
                ,x.ROTEIRO
                ,y.ROTEIRO
                ,x.MATRICULA
                ,y.MATRICULA
                ,x.NOME
                ,y.NOME
                ,x.ADMISSA
                ,y.ADMISSA
                ,x.SITFOLH
                ,y.SITFOLH                
                ,x.CCUSTO
                ,y.CCUSTO
                ,x.FUNCAO
                ,y.FUNCAO
                ,x.DESFUNCAO
                ,y.DESFUNCAO
                ,x.TIPOCOD
                ,y.TIPOCOD
                ,x.PD
                ,y.PD
                ,x.DESCPD
                ,y.DESCPD
                ,x.CODFOL
                ,y.CODFOL
        ORDER BY x.FILIAL
                ,x.PERIODO
                ,x.ROTEIRO
                ,x.MATRICULA
                ,x.NOME
                ,x.CCUSTO
                ,y.CCUSTO
                ,x.FUNCAO
                ,y.FUNCAO
                ,x.TIPOCOD
                ,x.PD

    endSQL

    lQueryView:=((cAliasTmp)->(!eof().and.!bof()))

return(lQueryView)

static function UpdateXMLFile(cFile as character,cFreezePanels as character,cConditionalFormatting as character) as logical
    local cXMLContent as character
    local cNumberFormat as character
    local cFWNumberFormat as character
    local lUpdateXMLFile as logical
    cXMLContent:=ReadXMLFile(cFile)
    cFreezePanels+="</WorksheetOptions>"
    cXMLContent:=StrTran(cXMLContent,"</WorksheetOptions>",cFreezePanels)
    cFreezePanels:=""
    cConditionalFormatting+="</Worksheet>"
    cXMLContent:=StrTran(cXMLContent,"</Worksheet>",cConditionalFormatting)
    cConditionalFormatting:=""
    cNumberFormat:='<NumberFormat ss:Format="#,##0.00_ ;\-#,##0.00\ "/>'
    cFWNumberFormat:='<NumberFormat ss:Format="_-* #,##0.00_-;\-* #,##0.00_-;_-* &quot;-&quot;??_-;_-@_-"/>'
    while (cFWNumberFormat$cXMLContent)
        cXMLContent:=strTran(cXMLContent,cFWNumberFormat,cNumberFormat)
    end while
    lUpdateXMLFile:=MemoWrite(cFile,cXMLContent)
    cXMLContent:=""
return(lUpdateXMLFile)

static function ReadXMLFile(cFile as character) as character

    local cBuffer as character
    local cXMLContent:="" as character

    local nfHandle:=fOpen(cFile,FO_READ) as numeric
    local nFileSize as numeric
    local nBytesRead as numeric
    local nBufferSize:=MAX_BUFFER_SIZE as numeric

    nBytesRead:=0

    nFileSize:=fSeek(nfHandle,0,FS_END)
    
    fSeek(nfHandle,0,FS_SET)   

    cBuffer:=""
    while (nBytesRead<=nFileSize)
        cBuffer+=fReadStr(@nfHandle,@nBufferSize)
        nBytesRead+=nBufferSize
        cXMLContent+=cBuffer
        cBuffer:=""
    end while

    if (!(empty(cBuffer)))
        cXMLContent+=cBuffer
        cBuffer:=""
    endif

    fClose(nfHandle)

return(cXMLContent)
